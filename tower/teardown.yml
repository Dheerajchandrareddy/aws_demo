---
- name: AWS PLAYBOOK TEARDOWN 101
  connection: local
  hosts: all
  gather_facts: false
  # The paramater region will be set for all ec2 modules by specifying it here under module_defaults
  module_defaults:
    group/aws:
      region: us-west-2

  tasks:
    - name: Destroy EC2 TEST_INSTANCE
      ec2:
        state: absent
        instance_id: "{{instance_id}}"

- name: AWS PLAYBOOK TEARDOWN RESOURCES
  connection: local
  hosts: localhost
  gather_facts: false
  # The paramater region will be set for all ec2 modules by specifying it here under module_defaults
  module_defaults:
    group/aws:
      region: us-west-2
  tasks:
    - name: Include vars of resources.yml which contains the vpc-subnet-id that we need
      include_vars:
        file: "{{playbook_dir}}/resources.yml"

    - name: Deleted EC2 security group for  aws-reinvent-vpc
      ec2_group:
        name: "aws-reinvent-sg"
        vpc_id: "{{vpc_id}}"
        state: absent
      register: delete_sg
      until: delete_sg is not failed
      retries: 50

    - name: Delete subnet for aws-reinvent-vpc
      ec2_vpc_subnet:
        vpc_id: "{{vpc_id}}"
        cidr: "192.168.0.0/28"
        state: absent

    - name: vpc internet gateway is deleted for aws-reinvent-vpc
      ec2_vpc_igw:
        vpc_id: "{{vpc_id}}"
        state: absent

    - name: grab route information for aws-reinvent-vpc
      ec2_vpc_route_table_facts:
        filters:
          vpc_id: "{{vpc_id}}"
      register: route_table_facts

    - debug:
        msg: "{{item.id}} and {{item.associations}}"
      loop: "{{route_table_facts.route_tables}}"

    - name: vpc public subnet route table is deleted
      ec2_vpc_route_table:
        vpc_id: "{{vpc_id}}"
        state: absent
        route_table_id: "{{item.id}}"
        lookup: id
      loop: "{{route_table_facts.route_tables}}"
      when: item.associations == []

    - name: Delete AWS VPC aws-reinvent-vpc
      ec2_vpc_net:
        name: "aws-reinvent-vpc"
        cidr_block: "192.168.0.0/24"
        state: absent
      register: delete_vpc
      until: delete_vpc is not failed
      retries: 50
