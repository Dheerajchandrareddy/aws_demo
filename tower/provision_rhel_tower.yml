---
- name: AWS PLAYBOOK 101
  connection: local
  hosts: localhost
  gather_facts: false
  # The paramater region will be set for all ec2 modules by specifying it here under module_defaults
  module_defaults:
    group/aws:
      region: "{{ aws_region | default('us-west-2') }}"
  vars:
    instance_name: "TEST_INSTANCE"

  tasks:
    - name: Include vars of resources.yml which contains the vpc-subnet-id that we need
      include_vars:
        file: "{{playbook_dir}}/resources.yml"

    # Using ec2_ami_facts allows us to find a particular ami instance id regardless of region
    # Look for owner 309956199498 to find official Red Hat AMIs
    - name: find ami instance-id for RHEL7
      ec2_ami_facts:
        owners: 309956199498
        filters:
          name: "RHEL-7.4*GA*"
          architecture: x86_64
      register: amis

    # The module ec2_ami_facts can return multiple ami instances for a given search
    # we will grab the latest instance (by date) that meets are critiers (RHEL 7.4 GA)
    - name: SET AMI FOR SERVER01
      set_fact:
        server01_ami: >
          {{ amis.images | selectattr('name', 'defined') | sort(attribute='creation_date') | last }}

   # the ec2 module actually provisions the instance
   # group refers to the AWS Security Group
   # key_name refers to the SSH key pair to use for this instance
   # vpc_subnet_id refers to the Virtual Private Cloud (VPC) subnet idenitifer to tie the instance to
    - name: Create EC2 instances for server01 node
      ec2:
        group: "aws-reinvent-sg"
        key_name: "aws-reinvent-key"
        vpc_subnet_id: "{{ec2_vpc_subnet}}"
        assign_public_ip: yes
        instance_type: t2.medium
        image: "{{ server01_ami.image_id }}"
        wait: yes
        exact_count: 1
        instance_tags:
            Name: "{{instance_name}}"
        count_tag:
            Name: TEST_INSTANCE
